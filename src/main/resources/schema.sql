DROP TABLE IF EXISTS users, items, item_requests, booking, comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS item_requests (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255),
    requestor_id INT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT pk_item_requests PRIMARY KEY (id),
    CONSTRAINT fk_item_requests_to_users FOREIGN KEY (requestor_id) REFERENCES users (id)
    );

CREATE TABLE IF NOT EXISTS items (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    owner_id INT NOT NULL,
    description VARCHAR(255),
    available BOOLEAN NOT NULL,
    request_id INT,
    CONSTRAINT pk_items PRIMARY KEY (id),
    CONSTRAINT fk_items_to_users FOREIGN KEY (owner_id) REFERENCES users (id),
    CONSTRAINT fk_items_to_request FOREIGN KEY (request_id) REFERENCES item_requests (id)
    );

CREATE TABLE IF NOT EXISTS booking (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    item_id INT NOT NULL,
    booker_id INT NOT NULL,
    status VARCHAR(50) NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_booking_to_users FOREIGN KEY (booker_id) REFERENCES users (id),
    CONSTRAINT fk_booking_to_items FOREIGN KEY (item_id) REFERENCES items (id)
    );

CREATE TABLE IF NOT EXISTS comments (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(200) NOT NULL,
    item_id INT NOT NULL,
    author_id INT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT fk_comments_to_items FOREIGN KEY (item_id) REFERENCES items (id)
    );

CREATE INDEX idx_users_email ON users (email);
CREATE INDEX idx_item_requests_requestor_id ON item_requests (requestor_id);
CREATE INDEX idx_items_owner_id ON items (owner_id);
CREATE INDEX idx_items_request_id ON items (request_id);
CREATE INDEX idx_booking_item_id ON booking (item_id);
CREATE INDEX idx_booking_booker_id ON booking (booker_id);
CREATE INDEX idx_booking_status ON booking (status);
CREATE INDEX idx_comments_item_id ON comments (item_id);
CREATE INDEX idx_comments_author_id ON comments (author_id);